/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;

    tapping-term-ms = <280>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        rgb_tog: rgb_toggle {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            bindings = <&rgb_ug RGB_TOG>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home {
            bindings = <
&kp Q      &kp W       &kp F       &kp P        &kp B    &kp J  &kp L        &kp U           &kp Y            &kp SQT
&kp A      &kp R       &kp S       &kp T        &kp G    &kp M  &kp N        &kp E           &kp I            &kp O
&kp Z      &mt LALT X  &mt LGUI C  &mt LCTRL D  &kp V    &kp K  &mt LCTRL H  &mt LGUI COMMA  &mt LALT PERIOD  &mt LS(MINUS) SLASH
&lt 2 TAB  &kp BSPC                                                                          &mt LSHFT SPACE  &lt 1 RET
            >;
        };

        sym {
            bindings = <
&kp EXCL   &kp AT_SIGN    &kp HASH        &kp DOLLAR       &kp PERCENT      &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LPAR           &kp RPAR
&kp HASH   &kp QUESTION   &kp SLASH       &kp COLON        &kp SEMICOLON    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSPC
&kp LSHFT  &kp PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH    &kp UNDERSCORE  &kp LEFT       &kp DOWN          &kp UP             &kp RIGHT
&to 0      &kp BACKSPACE                                                                                                     &kp SPACE          &kp NUMBER_0
            >;
        };

        nav {
            bindings = <
&kp N1       &kp N2         &kp N3                &kp N4           &kp N5        &kp N6     &kp N7     &kp N8            &kp N9             &kp N0
&kp LC(C)    &kp LCTRL      &kp DOUBLE_QUOTES     &kp PIPE         &kp HASH      &kp LEFT   &kp DOWN   &kp UP            &kp RIGHT          &kp DEL
&kp LC(ESC)  &kp TILDE      &kp NON_US_BACKSLASH  &kp NON_US_HASH  &kp TILDE2    &kp MINUS  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DEL
&to 0        &kp BACKSPACE                                                                                               &kp SPACE          &to 3
            >;
        };

        extra {
            bindings = <
&kp N1      &kp N2      &kp N3      &kp N4  &kp N5    &rgb_tog 0  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none            &bl BL_TOG
&kp F1      &kp F2      &kp F3      &kp F4  &kp F5    &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &bl BL_INC
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &none   &kp F7    &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bl BL_DEC
&to 0       &rgb_ug RGB_ON                                                                                &none            &none
            >;
        };
    };
};
