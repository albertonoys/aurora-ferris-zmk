/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;

    tapping-term-ms = <280>;
    flavor = "tap-preferred";
};

&led_strip { chain-length = <23>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home {
            bindings = <
&kp Q      &kp W            &kp F       &kp P        &kp B    &kp J  &kp L        &kp U           &kp Y            &kp SQT
&kp A      &kp R            &kp S       &kp T        &kp G    &kp M  &kp N        &kp E           &kp I            &kp O
&kp Z      &mt LALT X       &mt LGUI C  &mt LCTRL D  &kp V    &kp K  &mt LCTRL H  &mt LGUI COMMA  &mt LALT PERIOD  &mt LS(MINUS) SLASH
&lt 2 TAB  &lt 1 BACKSPACE                                                                        &mt LSHFT SPACE  &lt 1 RET
            >;
        };

        sym {
            bindings = <
&kp EXCL     &kp AT_SIGN    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE     &kp PLUS   &kp N7  &kp N8  &kp N9     &kp ASTERISK
&kp HASH     &kp DOLLAR     &kp LPAR          &kp RPAR           &kp GRAVE    &kp MINUS  &kp N4  &kp N5  &kp N6     &kp SEMICOLON
&kp PERCENT  &kp CARET      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE    &kp EQUAL  &kp N1  &kp N2  &kp N3     &kp BACKSLASH
&to 0        &kp BACKSPACE                                                                               &kp SPACE  &kp N0
            >;
        };

        nav {
            bindings = <
&kp ESC      &kp F1         &kp F2   &kp F3   &kp F4     &kp PRINTSCREEN   &kp PAGE_DOWN         &kp PAGE_UP         &kp CAPSLOCK       &kp LS(LC(NUMBER_1))
&kp LC(C)    &kp F5         &kp F6   &kp F7   &kp F8     &kp LEFT          &kp DOWN              &kp UP              &kp RIGHT          &kp LS(LC(N2))
&kp LC(ESC)  &kp F9         &kp F10  &kp F11  &kp F12    &kp LS(LC(LEFT))  &kp LS(LA(LC(DOWN)))  &kp LS(LA(LC(UP)))  &kp LS(LC(RIGHT))  &kp LS(LC(NUMBER_3))
&to 0        &kp BACKSPACE                                                                                           &kp SPACE          &mo 3
            >;
        };

        extra {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &kp CAPSLOCK     &none
&none         &none         &none         &none         &none             &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &none
&bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &none         &bt BT_CLR_ALL    &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &none
&none         &none                                                                                                          &none            &none
            >;
        };
    };
};
